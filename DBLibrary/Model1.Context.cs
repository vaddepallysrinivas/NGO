//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBLibrary
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class NGODBEntities : DbContext
    {
        public NGODBEntities()
            : base("name=NGODBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<tbl_Address> tbl_Address { get; set; }
        public DbSet<tbl_Cast> tbl_Cast { get; set; }
        public DbSet<tbl_District> tbl_District { get; set; }
        public DbSet<tbl_Gender> tbl_Gender { get; set; }
        public DbSet<tbl_Mandal> tbl_Mandal { get; set; }
        public DbSet<tbl_Notifications> tbl_Notifications { get; set; }
        public DbSet<tbl_Religion> tbl_Religion { get; set; }
        public DbSet<tbl_Roles> tbl_Roles { get; set; }
        public DbSet<tbl_schoolDetails> tbl_schoolDetails { get; set; }
        public DbSet<tbl_Student_details> tbl_Student_details { get; set; }
        public DbSet<tbl_teacher_details> tbl_teacher_details { get; set; }
        public DbSet<tbl_Users> tbl_Users { get; set; }
        public DbSet<tbl_Village> tbl_Village { get; set; }
        public DbSet<tbl_Zone> tbl_Zone { get; set; }
    
        public virtual ObjectResult<proc_Notifications_Result> proc_Notifications(string xml, Nullable<int> type)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Notifications_Result>("proc_Notifications", xmlParameter, typeParameter);
        }
    }
}
